ROOT=..
LIB=libcphvb.dylib
CC?=gcc
CXX?=g++
WARNOPTS=-Wall
ARCHOPTS?=-arch i386 -arch x86_64
LCFLAGS= $(WARNOPTS) $(ARCHOPTS) -g -O2 -fPIC -std=gnu99 -I$(ROOT)/include
LDFLAGS= $(ARCHOPTS) -shared  -Wl,-dylib_install_name,$(LIB)
SRC=cphvb.c cphvb_opcode.c cphvb_type.c cphvb_error.c cphvb_component.c cphvb_pprint.c cphvb_memory.c cphvb_vcache.c cphvb_array.c
OBJ=$(SRC:.c=.o) $(ROOT)/core/compute/cphvb_compute.o $(ROOT)/core/compute/cphvb_compute_helpers.o $(ROOT)/core/compute/cphvb_compute_random.o $(ROOT)/core/compute/cphvb_compute_reduce.o $(ROOT)/core/compute/cphvb_compute_matmul.o $(ROOT)/core/compute/cphvb_compute_nselect.o $(ROOT)/core/bundler/cphvb_bundler.o $(ROOT)/iniparser/libiniparser.a $(ROOT)/core/compute/cphvb_compute_aggregate.o $(ROOT)/core/compute/cphvb_compute_iterator.o $(ROOT)/core/compute/cphvb_compute_iterator2.o $(ROOT)/core/compute/cphvb_compute_iterator3.o
INSTALLDIR?=/opt/cphvb/

all: $(LIB)

%.o: %.c $(ROOT)/include/* compute/*.hpp
		$(CC) -c $< -o $@ $(LCFLAGS) $(CFLAGS)

$(LIB): $(OBJ)
		$(CXX) $(OBJ) -o $@ $(LDFLAGS)

clean:
		rm -rf *.o *~ *.so *.dylib

install: all
		cp $(LIB) $(INSTALLDIR)
