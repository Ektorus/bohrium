
    /*
     * Do not edit this file. It has been auto generate by 
     * ../core/codegen/gen_opcodes.py at 14/06/2012. 
     */

    #ifndef __CPHVB_OPCODE_H
    #define __CPHVB_OPCODE_H

    #include "cphvb_type.h"

    #ifdef __cplusplus
    extern "C" {
    #endif

    /* Codes for known oparations */
    enum /* cphvb_opcode */
    {
    
        CPHVB_BITWISE_AND,
        CPHVB_BITWISE_XOR,
        CPHVB_TANH,
        CPHVB_MULTIPLY,
        CPHVB_EQUAL,
        CPHVB_GREATER,
        CPHVB_SYNC,
        CPHVB_LOGADDEXP2,
        CPHVB_DISCARD,
        CPHVB_TRUNC,
        CPHVB_LOGICAL_XOR,
        CPHVB_GREATER_EQUAL,
        CPHVB_SQRT,
        CPHVB_COS,
        CPHVB_SQUARE,
        CPHVB_LOG1P,
        CPHVB_LESS,
        CPHVB_ARCCOSH,
        CPHVB_IDENTITY,
        CPHVB_LOG2,
        CPHVB_ARCSINH,
        CPHVB_POWER,
        CPHVB_ARCTAN2,
        CPHVB_ARCSIN,
        CPHVB_RINT,
        CPHVB_MINIMUM,
        CPHVB_FLOOR,
        CPHVB_LOGADDEXP,
        CPHVB_FMOD,
        CPHVB_RIGHT_SHIFT,
        CPHVB_NOT_EQUAL,
        CPHVB_COSH,
        CPHVB_LOG,
        CPHVB_LOGICAL_OR,
        CPHVB_LEFT_SHIFT,
        CPHVB_RECIPROCAL,
        CPHVB_CEIL,
        CPHVB_DESTROY,
        CPHVB_SINH,
        CPHVB_TAN,
        CPHVB_SUBTRACT,
        CPHVB_ARCTAN,
        CPHVB_NEGATIVE,
        CPHVB_USERFUNC,
        CPHVB_DIVIDE,
        CPHVB_ARCTANH,
        CPHVB_EXP2,
        CPHVB_FLOOR_DIVIDE,
        CPHVB_HYPOT,
        CPHVB_EXPM1,
        CPHVB_MAXIMUM,
        CPHVB_BITWISE_OR,
        CPHVB_REMAINDER,
        CPHVB_LOGICAL_AND,
        CPHVB_ARCCOS,
        CPHVB_SIGNBIT,
        CPHVB_EXP,
        CPHVB_SIGN,
        CPHVB_NONE,
        CPHVB_INVERT,
        CPHVB_SIN,
        CPHVB_ABSOLUTE,
        CPHVB_LOGICAL_NOT,
        CPHVB_LESS_EQUAL,
        CPHVB_LOG10,
        CPHVB_ADD
    };

    #define CPHVB_NO_OPCODES CPHVB_ADD

    #ifdef __cplusplus
    }
    #endif

    #endif
    