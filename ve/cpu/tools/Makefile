ROOT=../../..
CPU=$(ROOT)/ve/cpu
BDIR=$(CPU)/bdir
BH_PYTHON=python

#
# Generate Doxygen documentation
docs:
	mkdir -p $(CPU)/doc/output
	cd $(CPU) && doxygen doc/cpu_engine.doxy

#
# Generate autogenerated code.
gen:
	mkdir -p $(CPU)/autogen/output
	cd $(CPU)/autogen && ./gen.py
	cp $(CPU)/autogen/output/utils_mapping.cpp $(CPU)/
	cp $(CPU)/autogen/output/specializer_cexpression.cpp $(CPU)/
	cp $(CPU)/autogen/output/instrs_to_tacs.cpp $(CPU)/utils_mapping_tacs.cpp
	cp $(CPU)/autogen/output/tac.cpp $(CPU)/tac.h
	rm $(CPU)/autogen/output/*.cpp

COMMON_CFLAGS=-Wall -Wno-unknown-pragmas -lm -std=c99
OMP_CFLAGS=-fopenmp -fopenmp-simd -openmp-report2 -ftree-vectorizer-verbose=2

basics_compile:
	gcc openmp/basics.c $(COMMON_CFLAGS) -O3 $(OMP_CFLAGS) -o bin/basics_O3_omp
	gcc openmp/basics.c $(COMMON_CFLAGS) -O2 $(OMP_CFLAGS) -o bin/basics_O2_omp
	gcc openmp/basics.c $(COMMON_CFLAGS) -O1 $(OMP_CFLAGS) -o bin/basics_O1_omp
	gcc openmp/basics.c $(COMMON_CFLAGS) -O0 $(OMP_CFLAGS) -o bin/basics_O0_omp
	gcc openmp/basics.c $(COMMON_CFLAGS) -O3 -o bin/basics_O3
	gcc openmp/basics.c $(COMMON_CFLAGS) -O2 -o bin/basics_O2
	gcc openmp/basics.c $(COMMON_CFLAGS) -O1 -o bin/basics_O1
	gcc openmp/basics.c $(COMMON_CFLAGS) -O0 -o bin/basics_O0

basics_run:
	@echo "O3"
	/usr/bin/time bin/basics_O3
	/usr/bin/time bin/basics_O3_omp
	@echo "O2"
	/usr/bin/time bin/basics_O2
	/usr/bin/time bin/basics_O2_omp
	@echo "O1"
	/usr/bin/time bin/basics_O1
	/usr/bin/time bin/basics_O1_omp
	@echo "O0"
	/usr/bin/time bin/basics_O0
	/usr/bin/time bin/basics_O0_omp

basics: basics_compile basics_run

purge_ko:
	rm -f ~/.local/var/bohrium/kernels/*
	rm -f ~/.local/var/bohrium/objects/*

purge_krn:
	rm -rf ~/.local/share/bohrium/templates/*
	rm -rf ~/.local/var/bohrium/kernels/*
	rm -rf ~/.local/var/bohrium/objects/*

#
# Remove installed stuff specific to the cpu-engine
purge_cpu: purge_krn
	rm -rf ~/.local/var/bohrium/scripts
	rm -f ~/.local/lib/libbh_ve_cpu.*
	rm -f ~/.local/include/bohrium/tac.h

#
# Remove everything
purge_all: purge_cpu
	cd $(ROOT) && git clean -fdx && git clean -fdX
	rm -rf $(BDIR)
	rm -rf ~/.local/bin
	rm -rf ~/.local/include
	rm -rf ~/.local/lib
	rm -rf ~/.local/share/bohrium
	rm -rf ~/.local/var
	rm -f ~/.bohrium/config.ini

#
# "Reinstall" the cpu-engine
#
reset_krn: purge_krn install
reset_cpu: purge_cpu install
purge_install: purge_cpu purge_all clean gen install

#
# "Install the cpu-engine
install:
	mkdir -p $(BDIR)
	cd $(BDIR) && cmake $(ROOT) && make && make install

#
# Clean up the build-files
clean:
	rm -rf $(BDIR) core trace-*.txt flow*.dot flow*.html graph-*.dot $(CPU)/doc/output $(CPU)/autogen/output/*

crap:
	rm -f graph*.dot flow*.dot trace*.txt flow*.html vgcore.* core /tmp/graph*.html /tmp/graph*.png /tmp/graph*.png

#
# Utilities
move_fused:
	python $(CPU)/tools/move_code.py ~/.local/var/bohrium/kernels/ /tmp/code/fused

move_sij:
	python $(CPU)/tools/move_code.py ~/.local/var/bohrium/kernels/ /tmp/code/sij

prep:
	[ -d ~/.local/var/bohrium/kernels ] && rm -f ~/.local/var/bohrium/kernels/*.c
	[ -d ~/.local/var/bohrium/objects ] && rm -f ~/.local/var/bohrium/kernels/*.so

prep_fsd: prep
	mkdir -p /tmp/code/fused
	rm -rf /tmp/code/fused/*.c

prep_sij: prep
	mkdir -p /tmp/code/sij
	rm -rf /tmp/code/sij/*.c

#
# Benchmarks
gauss_sij: prep_sij
	BH_VE_CPU_JIT_FUSION=0 BH_VE_CPU_JIT_DUMPSRC=1 BH_VE_CPU_DUMPREP=1 python -m bohrium.examples.gauss --size=4*4 --bohrium=True

gauss_fsd: prep_fsd
	BH_VE_CPU_JIT_FUSION=1 BH_VE_CPU_JIT_DUMPSRC=1 BH_VE_CPU_DUMPREP=1 python -m bohrium.examples.gauss --size=4*4 --bohrium=True

#
# Tests
gentest:
	BH_VE_CPU_JIT_FUSION=1 BH_VE_CPU_JIT_DUMPSRC=1 ./gentest.py
	
test:
	BH_VE_CPU_JIT_FUSION=1 BH_VE_CPU_JIT_DUMPSRC=1 $(BH_PYTHON) $(ROOT)/test/python/numpytest.py
	BH_VE_CPU_JIT_FUSION=0 BH_VE_CPU_JIT_DUMPSRC=1 $(BH_PYTHON) $(ROOT)/test/python/numpytest.py

graphs:
	python ./create_svg.py ./ /tmp/
