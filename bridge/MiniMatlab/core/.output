Terminals unused in grammar

   EXPON


Grammar

    0 $accept: prog $end

    1 prog: stmt
    2     | prog stmt

    3 loop_stmts: stmt
    4           | loop_stmts stmt

    5 delim: COMMA
    6      | /* empty */

    7 loop: FOR VARIABLE EQ factor COLON factor delim loop_stmts ENDER
    8     | FOR VARIABLE EQ factor COLON factor COLON factor delim loop_stmts ENDER

    9 stmt: exp NL
   10     | VARIABLE EQ exp NL
   11     | var EQ exp NL
   12     | exp STOP
   13     | VARIABLE EQ exp STOP
   14     | var EQ exp STOP
   15     | loop
   16     | NL

   17 array_exp: exp
   18          | array_exp COMMA exp

   19 exp: exp PLUS term
   20    | exp MINUS term
   21    | term

   22 term: term MULT sfactor
   23     | term DIVIDE sfactor
   24     | sfactor

   25 sfactor: PLUS factor
   26        | MINUS factor
   27        | factor

   28 slice: COLON
   29      | exp_slice
   30      | exp_slice COLON exp_slice
   31      | exp_slice COLON exp_slice COLON exp_slice

   32 exp_slice: exp_slice PLUS term_slice
   33          | exp_slice MINUS term_slice
   34          | term_slice

   35 term_slice: term_slice MULT sfactor_slice
   36           | term_slice DIVIDE sfactor_slice
   37           | sfactor_slice

   38 sfactor_slice: PLUS factor_slice
   39              | MINUS factor_slice
   40              | factor_slice

   41 factor_slice: NUM
   42             | VARIABLE
   43             | LP exp_slice RP
   44             | ENDER

   45 var: VARIABLE LP slice RP
   46    | VARIABLE LP slice COMMA slice RP

   47 index: exp_index
   48      | exp_index COMMA exp_index

   49 exp_index: exp_index PLUS term_index
   50          | exp_index MINUS term_index
   51          | term_index

   52 term_index: term_index MULT sfactor_index
   53           | term_index DIVIDE sfactor_index
   54           | sfactor_index

   55 sfactor_index: PLUS factor_index
   56              | MINUS factor_index
   57              | factor_index

   58 factor_index: NUM
   59             | VARIABLE
   60             | LP exp_index RP

   61 factor: NUM
   62       | VARIABLE
   63       | var
   64       | LS array_exp RS
   65       | LP exp RP
   66       | RAND LP index RP
   67       | ZEROS LP index RP
   68       | ONES LP index RP


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 41 58 61
VARIABLE (259) 7 8 10 13 42 45 46 59 62
NL (260) 9 10 11 16
PLUS (261) 19 25 32 38 49 55
MINUS (262) 20 26 33 39 50 56
MULT (263) 22 35 52
DIVIDE (264) 23 36 53
LP (265) 43 45 46 60 65 66 67 68
RP (266) 43 45 46 60 65 66 67 68
LS (267) 64
RS (268) 64
FOR (269) 7 8
ENDER (270) 7 8 44
EQ (271) 7 8 10 11 13 14
COMMA (272) 5 18 46 48
COLON (273) 7 8 28 30 31
STOP (274) 12 13 14
EXPON (275)
RAND (276) 66
ZEROS (277) 67
ONES (278) 68


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
prog (25)
    on left: 1 2, on right: 0 2
loop_stmts (26)
    on left: 3 4, on right: 4 7 8
delim (27)
    on left: 5 6, on right: 7 8
loop (28)
    on left: 7 8, on right: 15
stmt (29)
    on left: 9 10 11 12 13 14 15 16, on right: 1 2 3 4
array_exp (30)
    on left: 17 18, on right: 18 64
exp (31)
    on left: 19 20 21, on right: 9 10 11 12 13 14 17 18 19 20 65
term (32)
    on left: 22 23 24, on right: 19 20 21 22 23
sfactor (33)
    on left: 25 26 27, on right: 22 23 24
slice (34)
    on left: 28 29 30 31, on right: 45 46
exp_slice (35)
    on left: 32 33 34, on right: 29 30 31 32 33 43
term_slice (36)
    on left: 35 36 37, on right: 32 33 34 35 36
sfactor_slice (37)
    on left: 38 39 40, on right: 35 36 37
factor_slice (38)
    on left: 41 42 43 44, on right: 38 39 40
var (39)
    on left: 45 46, on right: 11 14 63
index (40)
    on left: 47 48, on right: 66 67 68
exp_index (41)
    on left: 49 50 51, on right: 47 48 49 50 60
term_index (42)
    on left: 52 53 54, on right: 49 50 51 52 53
sfactor_index (43)
    on left: 55 56 57, on right: 52 53 54
factor_index (44)
    on left: 58 59 60, on right: 55 56 57
factor (45)
    on left: 61 62 63 64 65 66 67 68, on right: 7 8 25 26 27


state 0

    0 $accept: . prog $end

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NL        shift, and go to state 3
    PLUS      shift, and go to state 4
    MINUS     shift, and go to state 5
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    FOR       shift, and go to state 8
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    prog     go to state 12
    loop     go to state 13
    stmt     go to state 14
    exp      go to state 15
    term     go to state 16
    sfactor  go to state 17
    var      go to state 18
    factor   go to state 19


state 1

   61 factor: NUM .

    $default  reduce using rule 61 (factor)


state 2

   10 stmt: VARIABLE . EQ exp NL
   13     | VARIABLE . EQ exp STOP
   45 var: VARIABLE . LP slice RP
   46    | VARIABLE . LP slice COMMA slice RP
   62 factor: VARIABLE .

    LP  shift, and go to state 20
    EQ  shift, and go to state 21

    $default  reduce using rule 62 (factor)


state 3

   16 stmt: NL .

    $default  reduce using rule 16 (stmt)


state 4

   25 sfactor: PLUS . factor

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 22
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    var     go to state 23
    factor  go to state 24


state 5

   26 sfactor: MINUS . factor

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 22
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    var     go to state 23
    factor  go to state 25


state 6

   65 factor: LP . exp RP

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 22
    PLUS      shift, and go to state 4
    MINUS     shift, and go to state 5
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    exp      go to state 26
    term     go to state 16
    sfactor  go to state 17
    var      go to state 23
    factor   go to state 19


state 7

   64 factor: LS . array_exp RS

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 22
    PLUS      shift, and go to state 4
    MINUS     shift, and go to state 5
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    array_exp  go to state 27
    exp        go to state 28
    term       go to state 16
    sfactor    go to state 17
    var        go to state 23
    factor     go to state 19


state 8

    7 loop: FOR . VARIABLE EQ factor COLON factor delim loop_stmts ENDER
    8     | FOR . VARIABLE EQ factor COLON factor COLON factor delim loop_stmts ENDER

    VARIABLE  shift, and go to state 29


state 9

   66 factor: RAND . LP index RP

    LP  shift, and go to state 30


state 10

   67 factor: ZEROS . LP index RP

    LP  shift, and go to state 31


state 11

   68 factor: ONES . LP index RP

    LP  shift, and go to state 32


state 12

    0 $accept: prog . $end
    2 prog: prog . stmt

    $end      shift, and go to state 33
    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NL        shift, and go to state 3
    PLUS      shift, and go to state 4
    MINUS     shift, and go to state 5
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    FOR       shift, and go to state 8
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    loop     go to state 13
    stmt     go to state 34
    exp      go to state 15
    term     go to state 16
    sfactor  go to state 17
    var      go to state 18
    factor   go to state 19


state 13

   15 stmt: loop .

    $default  reduce using rule 15 (stmt)


state 14

    1 prog: stmt .

    $default  reduce using rule 1 (prog)


state 15

    9 stmt: exp . NL
   12     | exp . STOP
   19 exp: exp . PLUS term
   20    | exp . MINUS term

    NL     shift, and go to state 35
    PLUS   shift, and go to state 36
    MINUS  shift, and go to state 37
    STOP   shift, and go to state 38


state 16

   21 exp: term .
   22 term: term . MULT sfactor
   23     | term . DIVIDE sfactor

    MULT    shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 21 (exp)


state 17

   24 term: sfactor .

    $default  reduce using rule 24 (term)


state 18

   11 stmt: var . EQ exp NL
   14     | var . EQ exp STOP
   63 factor: var .

    EQ  shift, and go to state 41

    $default  reduce using rule 63 (factor)


state 19

   27 sfactor: factor .

    $default  reduce using rule 27 (sfactor)


state 20

   45 var: VARIABLE LP . slice RP
   46    | VARIABLE LP . slice COMMA slice RP

    NUM       shift, and go to state 42
    VARIABLE  shift, and go to state 43
    PLUS      shift, and go to state 44
    MINUS     shift, and go to state 45
    LP        shift, and go to state 46
    ENDER     shift, and go to state 47
    COLON     shift, and go to state 48

    slice          go to state 49
    exp_slice      go to state 50
    term_slice     go to state 51
    sfactor_slice  go to state 52
    factor_slice   go to state 53


state 21

   10 stmt: VARIABLE EQ . exp NL
   13     | VARIABLE EQ . exp STOP

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 22
    PLUS      shift, and go to state 4
    MINUS     shift, and go to state 5
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    exp      go to state 54
    term     go to state 16
    sfactor  go to state 17
    var      go to state 23
    factor   go to state 19


state 22

   45 var: VARIABLE . LP slice RP
   46    | VARIABLE . LP slice COMMA slice RP
   62 factor: VARIABLE .

    LP  shift, and go to state 20

    $default  reduce using rule 62 (factor)


state 23

   63 factor: var .

    $default  reduce using rule 63 (factor)


state 24

   25 sfactor: PLUS factor .

    $default  reduce using rule 25 (sfactor)


state 25

   26 sfactor: MINUS factor .

    $default  reduce using rule 26 (sfactor)


state 26

   19 exp: exp . PLUS term
   20    | exp . MINUS term
   65 factor: LP exp . RP

    PLUS   shift, and go to state 36
    MINUS  shift, and go to state 37
    RP     shift, and go to state 55


state 27

   18 array_exp: array_exp . COMMA exp
   64 factor: LS array_exp . RS

    RS     shift, and go to state 56
    COMMA  shift, and go to state 57


state 28

   17 array_exp: exp .
   19 exp: exp . PLUS term
   20    | exp . MINUS term

    PLUS   shift, and go to state 36
    MINUS  shift, and go to state 37

    $default  reduce using rule 17 (array_exp)


state 29

    7 loop: FOR VARIABLE . EQ factor COLON factor delim loop_stmts ENDER
    8     | FOR VARIABLE . EQ factor COLON factor COLON factor delim loop_stmts ENDER

    EQ  shift, and go to state 58


state 30

   66 factor: RAND LP . index RP

    NUM       shift, and go to state 59
    VARIABLE  shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    LP        shift, and go to state 63

    index          go to state 64
    exp_index      go to state 65
    term_index     go to state 66
    sfactor_index  go to state 67
    factor_index   go to state 68


state 31

   67 factor: ZEROS LP . index RP

    NUM       shift, and go to state 59
    VARIABLE  shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    LP        shift, and go to state 63

    index          go to state 69
    exp_index      go to state 65
    term_index     go to state 66
    sfactor_index  go to state 67
    factor_index   go to state 68


state 32

   68 factor: ONES LP . index RP

    NUM       shift, and go to state 59
    VARIABLE  shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    LP        shift, and go to state 63

    index          go to state 70
    exp_index      go to state 65
    term_index     go to state 66
    sfactor_index  go to state 67
    factor_index   go to state 68


state 33

    0 $accept: prog $end .

    $default  accept


state 34

    2 prog: prog stmt .

    $default  reduce using rule 2 (prog)


state 35

    9 stmt: exp NL .

    $default  reduce using rule 9 (stmt)


state 36

   19 exp: exp PLUS . term

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 22
    PLUS      shift, and go to state 4
    MINUS     shift, and go to state 5
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    term     go to state 71
    sfactor  go to state 17
    var      go to state 23
    factor   go to state 19


state 37

   20 exp: exp MINUS . term

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 22
    PLUS      shift, and go to state 4
    MINUS     shift, and go to state 5
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    term     go to state 72
    sfactor  go to state 17
    var      go to state 23
    factor   go to state 19


state 38

   12 stmt: exp STOP .

    $default  reduce using rule 12 (stmt)


state 39

   22 term: term MULT . sfactor

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 22
    PLUS      shift, and go to state 4
    MINUS     shift, and go to state 5
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    sfactor  go to state 73
    var      go to state 23
    factor   go to state 19


state 40

   23 term: term DIVIDE . sfactor

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 22
    PLUS      shift, and go to state 4
    MINUS     shift, and go to state 5
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    sfactor  go to state 74
    var      go to state 23
    factor   go to state 19


state 41

   11 stmt: var EQ . exp NL
   14     | var EQ . exp STOP

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 22
    PLUS      shift, and go to state 4
    MINUS     shift, and go to state 5
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    exp      go to state 75
    term     go to state 16
    sfactor  go to state 17
    var      go to state 23
    factor   go to state 19


state 42

   41 factor_slice: NUM .

    $default  reduce using rule 41 (factor_slice)


state 43

   42 factor_slice: VARIABLE .

    $default  reduce using rule 42 (factor_slice)


state 44

   38 sfactor_slice: PLUS . factor_slice

    NUM       shift, and go to state 42
    VARIABLE  shift, and go to state 43
    LP        shift, and go to state 46
    ENDER     shift, and go to state 47

    factor_slice  go to state 76


state 45

   39 sfactor_slice: MINUS . factor_slice

    NUM       shift, and go to state 42
    VARIABLE  shift, and go to state 43
    LP        shift, and go to state 46
    ENDER     shift, and go to state 47

    factor_slice  go to state 77


state 46

   43 factor_slice: LP . exp_slice RP

    NUM       shift, and go to state 42
    VARIABLE  shift, and go to state 43
    PLUS      shift, and go to state 44
    MINUS     shift, and go to state 45
    LP        shift, and go to state 46
    ENDER     shift, and go to state 47

    exp_slice      go to state 78
    term_slice     go to state 51
    sfactor_slice  go to state 52
    factor_slice   go to state 53


state 47

   44 factor_slice: ENDER .

    $default  reduce using rule 44 (factor_slice)


state 48

   28 slice: COLON .

    $default  reduce using rule 28 (slice)


state 49

   45 var: VARIABLE LP slice . RP
   46    | VARIABLE LP slice . COMMA slice RP

    RP     shift, and go to state 79
    COMMA  shift, and go to state 80


state 50

   29 slice: exp_slice .
   30      | exp_slice . COLON exp_slice
   31      | exp_slice . COLON exp_slice COLON exp_slice
   32 exp_slice: exp_slice . PLUS term_slice
   33          | exp_slice . MINUS term_slice

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    COLON  shift, and go to state 83

    $default  reduce using rule 29 (slice)


state 51

   34 exp_slice: term_slice .
   35 term_slice: term_slice . MULT sfactor_slice
   36           | term_slice . DIVIDE sfactor_slice

    MULT    shift, and go to state 84
    DIVIDE  shift, and go to state 85

    $default  reduce using rule 34 (exp_slice)


state 52

   37 term_slice: sfactor_slice .

    $default  reduce using rule 37 (term_slice)


state 53

   40 sfactor_slice: factor_slice .

    $default  reduce using rule 40 (sfactor_slice)


state 54

   10 stmt: VARIABLE EQ exp . NL
   13     | VARIABLE EQ exp . STOP
   19 exp: exp . PLUS term
   20    | exp . MINUS term

    NL     shift, and go to state 86
    PLUS   shift, and go to state 36
    MINUS  shift, and go to state 37
    STOP   shift, and go to state 87


state 55

   65 factor: LP exp RP .

    $default  reduce using rule 65 (factor)


state 56

   64 factor: LS array_exp RS .

    $default  reduce using rule 64 (factor)


state 57

   18 array_exp: array_exp COMMA . exp

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 22
    PLUS      shift, and go to state 4
    MINUS     shift, and go to state 5
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    exp      go to state 88
    term     go to state 16
    sfactor  go to state 17
    var      go to state 23
    factor   go to state 19


state 58

    7 loop: FOR VARIABLE EQ . factor COLON factor delim loop_stmts ENDER
    8     | FOR VARIABLE EQ . factor COLON factor COLON factor delim loop_stmts ENDER

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 22
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    var     go to state 23
    factor  go to state 89


state 59

   58 factor_index: NUM .

    $default  reduce using rule 58 (factor_index)


state 60

   59 factor_index: VARIABLE .

    $default  reduce using rule 59 (factor_index)


state 61

   55 sfactor_index: PLUS . factor_index

    NUM       shift, and go to state 59
    VARIABLE  shift, and go to state 60
    LP        shift, and go to state 63

    factor_index  go to state 90


state 62

   56 sfactor_index: MINUS . factor_index

    NUM       shift, and go to state 59
    VARIABLE  shift, and go to state 60
    LP        shift, and go to state 63

    factor_index  go to state 91


state 63

   60 factor_index: LP . exp_index RP

    NUM       shift, and go to state 59
    VARIABLE  shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    LP        shift, and go to state 63

    exp_index      go to state 92
    term_index     go to state 66
    sfactor_index  go to state 67
    factor_index   go to state 68


state 64

   66 factor: RAND LP index . RP

    RP  shift, and go to state 93


state 65

   47 index: exp_index .
   48      | exp_index . COMMA exp_index
   49 exp_index: exp_index . PLUS term_index
   50          | exp_index . MINUS term_index

    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    COMMA  shift, and go to state 96

    $default  reduce using rule 47 (index)


state 66

   51 exp_index: term_index .
   52 term_index: term_index . MULT sfactor_index
   53           | term_index . DIVIDE sfactor_index

    MULT    shift, and go to state 97
    DIVIDE  shift, and go to state 98

    $default  reduce using rule 51 (exp_index)


state 67

   54 term_index: sfactor_index .

    $default  reduce using rule 54 (term_index)


state 68

   57 sfactor_index: factor_index .

    $default  reduce using rule 57 (sfactor_index)


state 69

   67 factor: ZEROS LP index . RP

    RP  shift, and go to state 99


state 70

   68 factor: ONES LP index . RP

    RP  shift, and go to state 100


state 71

   19 exp: exp PLUS term .
   22 term: term . MULT sfactor
   23     | term . DIVIDE sfactor

    MULT    shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 19 (exp)


state 72

   20 exp: exp MINUS term .
   22 term: term . MULT sfactor
   23     | term . DIVIDE sfactor

    MULT    shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 20 (exp)


state 73

   22 term: term MULT sfactor .

    $default  reduce using rule 22 (term)


state 74

   23 term: term DIVIDE sfactor .

    $default  reduce using rule 23 (term)


state 75

   11 stmt: var EQ exp . NL
   14     | var EQ exp . STOP
   19 exp: exp . PLUS term
   20    | exp . MINUS term

    NL     shift, and go to state 101
    PLUS   shift, and go to state 36
    MINUS  shift, and go to state 37
    STOP   shift, and go to state 102


state 76

   38 sfactor_slice: PLUS factor_slice .

    $default  reduce using rule 38 (sfactor_slice)


state 77

   39 sfactor_slice: MINUS factor_slice .

    $default  reduce using rule 39 (sfactor_slice)


state 78

   32 exp_slice: exp_slice . PLUS term_slice
   33          | exp_slice . MINUS term_slice
   43 factor_slice: LP exp_slice . RP

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    RP     shift, and go to state 103


state 79

   45 var: VARIABLE LP slice RP .

    $default  reduce using rule 45 (var)


state 80

   46 var: VARIABLE LP slice COMMA . slice RP

    NUM       shift, and go to state 42
    VARIABLE  shift, and go to state 43
    PLUS      shift, and go to state 44
    MINUS     shift, and go to state 45
    LP        shift, and go to state 46
    ENDER     shift, and go to state 47
    COLON     shift, and go to state 48

    slice          go to state 104
    exp_slice      go to state 50
    term_slice     go to state 51
    sfactor_slice  go to state 52
    factor_slice   go to state 53


state 81

   32 exp_slice: exp_slice PLUS . term_slice

    NUM       shift, and go to state 42
    VARIABLE  shift, and go to state 43
    PLUS      shift, and go to state 44
    MINUS     shift, and go to state 45
    LP        shift, and go to state 46
    ENDER     shift, and go to state 47

    term_slice     go to state 105
    sfactor_slice  go to state 52
    factor_slice   go to state 53


state 82

   33 exp_slice: exp_slice MINUS . term_slice

    NUM       shift, and go to state 42
    VARIABLE  shift, and go to state 43
    PLUS      shift, and go to state 44
    MINUS     shift, and go to state 45
    LP        shift, and go to state 46
    ENDER     shift, and go to state 47

    term_slice     go to state 106
    sfactor_slice  go to state 52
    factor_slice   go to state 53


state 83

   30 slice: exp_slice COLON . exp_slice
   31      | exp_slice COLON . exp_slice COLON exp_slice

    NUM       shift, and go to state 42
    VARIABLE  shift, and go to state 43
    PLUS      shift, and go to state 44
    MINUS     shift, and go to state 45
    LP        shift, and go to state 46
    ENDER     shift, and go to state 47

    exp_slice      go to state 107
    term_slice     go to state 51
    sfactor_slice  go to state 52
    factor_slice   go to state 53


state 84

   35 term_slice: term_slice MULT . sfactor_slice

    NUM       shift, and go to state 42
    VARIABLE  shift, and go to state 43
    PLUS      shift, and go to state 44
    MINUS     shift, and go to state 45
    LP        shift, and go to state 46
    ENDER     shift, and go to state 47

    sfactor_slice  go to state 108
    factor_slice   go to state 53


state 85

   36 term_slice: term_slice DIVIDE . sfactor_slice

    NUM       shift, and go to state 42
    VARIABLE  shift, and go to state 43
    PLUS      shift, and go to state 44
    MINUS     shift, and go to state 45
    LP        shift, and go to state 46
    ENDER     shift, and go to state 47

    sfactor_slice  go to state 109
    factor_slice   go to state 53


state 86

   10 stmt: VARIABLE EQ exp NL .

    $default  reduce using rule 10 (stmt)


state 87

   13 stmt: VARIABLE EQ exp STOP .

    $default  reduce using rule 13 (stmt)


state 88

   18 array_exp: array_exp COMMA exp .
   19 exp: exp . PLUS term
   20    | exp . MINUS term

    PLUS   shift, and go to state 36
    MINUS  shift, and go to state 37

    $default  reduce using rule 18 (array_exp)


state 89

    7 loop: FOR VARIABLE EQ factor . COLON factor delim loop_stmts ENDER
    8     | FOR VARIABLE EQ factor . COLON factor COLON factor delim loop_stmts ENDER

    COLON  shift, and go to state 110


state 90

   55 sfactor_index: PLUS factor_index .

    $default  reduce using rule 55 (sfactor_index)


state 91

   56 sfactor_index: MINUS factor_index .

    $default  reduce using rule 56 (sfactor_index)


state 92

   49 exp_index: exp_index . PLUS term_index
   50          | exp_index . MINUS term_index
   60 factor_index: LP exp_index . RP

    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    RP     shift, and go to state 111


state 93

   66 factor: RAND LP index RP .

    $default  reduce using rule 66 (factor)


state 94

   49 exp_index: exp_index PLUS . term_index

    NUM       shift, and go to state 59
    VARIABLE  shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    LP        shift, and go to state 63

    term_index     go to state 112
    sfactor_index  go to state 67
    factor_index   go to state 68


state 95

   50 exp_index: exp_index MINUS . term_index

    NUM       shift, and go to state 59
    VARIABLE  shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    LP        shift, and go to state 63

    term_index     go to state 113
    sfactor_index  go to state 67
    factor_index   go to state 68


state 96

   48 index: exp_index COMMA . exp_index

    NUM       shift, and go to state 59
    VARIABLE  shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    LP        shift, and go to state 63

    exp_index      go to state 114
    term_index     go to state 66
    sfactor_index  go to state 67
    factor_index   go to state 68


state 97

   52 term_index: term_index MULT . sfactor_index

    NUM       shift, and go to state 59
    VARIABLE  shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    LP        shift, and go to state 63

    sfactor_index  go to state 115
    factor_index   go to state 68


state 98

   53 term_index: term_index DIVIDE . sfactor_index

    NUM       shift, and go to state 59
    VARIABLE  shift, and go to state 60
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    LP        shift, and go to state 63

    sfactor_index  go to state 116
    factor_index   go to state 68


state 99

   67 factor: ZEROS LP index RP .

    $default  reduce using rule 67 (factor)


state 100

   68 factor: ONES LP index RP .

    $default  reduce using rule 68 (factor)


state 101

   11 stmt: var EQ exp NL .

    $default  reduce using rule 11 (stmt)


state 102

   14 stmt: var EQ exp STOP .

    $default  reduce using rule 14 (stmt)


state 103

   43 factor_slice: LP exp_slice RP .

    $default  reduce using rule 43 (factor_slice)


state 104

   46 var: VARIABLE LP slice COMMA slice . RP

    RP  shift, and go to state 117


state 105

   32 exp_slice: exp_slice PLUS term_slice .
   35 term_slice: term_slice . MULT sfactor_slice
   36           | term_slice . DIVIDE sfactor_slice

    MULT    shift, and go to state 84
    DIVIDE  shift, and go to state 85

    $default  reduce using rule 32 (exp_slice)


state 106

   33 exp_slice: exp_slice MINUS term_slice .
   35 term_slice: term_slice . MULT sfactor_slice
   36           | term_slice . DIVIDE sfactor_slice

    MULT    shift, and go to state 84
    DIVIDE  shift, and go to state 85

    $default  reduce using rule 33 (exp_slice)


state 107

   30 slice: exp_slice COLON exp_slice .
   31      | exp_slice COLON exp_slice . COLON exp_slice
   32 exp_slice: exp_slice . PLUS term_slice
   33          | exp_slice . MINUS term_slice

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82
    COLON  shift, and go to state 118

    $default  reduce using rule 30 (slice)


state 108

   35 term_slice: term_slice MULT sfactor_slice .

    $default  reduce using rule 35 (term_slice)


state 109

   36 term_slice: term_slice DIVIDE sfactor_slice .

    $default  reduce using rule 36 (term_slice)


state 110

    7 loop: FOR VARIABLE EQ factor COLON . factor delim loop_stmts ENDER
    8     | FOR VARIABLE EQ factor COLON . factor COLON factor delim loop_stmts ENDER

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 22
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    var     go to state 23
    factor  go to state 119


state 111

   60 factor_index: LP exp_index RP .

    $default  reduce using rule 60 (factor_index)


state 112

   49 exp_index: exp_index PLUS term_index .
   52 term_index: term_index . MULT sfactor_index
   53           | term_index . DIVIDE sfactor_index

    MULT    shift, and go to state 97
    DIVIDE  shift, and go to state 98

    $default  reduce using rule 49 (exp_index)


state 113

   50 exp_index: exp_index MINUS term_index .
   52 term_index: term_index . MULT sfactor_index
   53           | term_index . DIVIDE sfactor_index

    MULT    shift, and go to state 97
    DIVIDE  shift, and go to state 98

    $default  reduce using rule 50 (exp_index)


state 114

   48 index: exp_index COMMA exp_index .
   49 exp_index: exp_index . PLUS term_index
   50          | exp_index . MINUS term_index

    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95

    $default  reduce using rule 48 (index)


state 115

   52 term_index: term_index MULT sfactor_index .

    $default  reduce using rule 52 (term_index)


state 116

   53 term_index: term_index DIVIDE sfactor_index .

    $default  reduce using rule 53 (term_index)


state 117

   46 var: VARIABLE LP slice COMMA slice RP .

    $default  reduce using rule 46 (var)


state 118

   31 slice: exp_slice COLON exp_slice COLON . exp_slice

    NUM       shift, and go to state 42
    VARIABLE  shift, and go to state 43
    PLUS      shift, and go to state 44
    MINUS     shift, and go to state 45
    LP        shift, and go to state 46
    ENDER     shift, and go to state 47

    exp_slice      go to state 120
    term_slice     go to state 51
    sfactor_slice  go to state 52
    factor_slice   go to state 53


state 119

    7 loop: FOR VARIABLE EQ factor COLON factor . delim loop_stmts ENDER
    8     | FOR VARIABLE EQ factor COLON factor . COLON factor delim loop_stmts ENDER

    COMMA  shift, and go to state 121
    COLON  shift, and go to state 122

    $default  reduce using rule 6 (delim)

    delim  go to state 123


state 120

   31 slice: exp_slice COLON exp_slice COLON exp_slice .
   32 exp_slice: exp_slice . PLUS term_slice
   33          | exp_slice . MINUS term_slice

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82

    $default  reduce using rule 31 (slice)


state 121

    5 delim: COMMA .

    $default  reduce using rule 5 (delim)


state 122

    8 loop: FOR VARIABLE EQ factor COLON factor COLON . factor delim loop_stmts ENDER

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 22
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    var     go to state 23
    factor  go to state 124


state 123

    7 loop: FOR VARIABLE EQ factor COLON factor delim . loop_stmts ENDER

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NL        shift, and go to state 3
    PLUS      shift, and go to state 4
    MINUS     shift, and go to state 5
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    FOR       shift, and go to state 8
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    loop_stmts  go to state 125
    loop        go to state 13
    stmt        go to state 126
    exp         go to state 15
    term        go to state 16
    sfactor     go to state 17
    var         go to state 18
    factor      go to state 19


state 124

    8 loop: FOR VARIABLE EQ factor COLON factor COLON factor . delim loop_stmts ENDER

    COMMA  shift, and go to state 121

    $default  reduce using rule 6 (delim)

    delim  go to state 127


state 125

    4 loop_stmts: loop_stmts . stmt
    7 loop: FOR VARIABLE EQ factor COLON factor delim loop_stmts . ENDER

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NL        shift, and go to state 3
    PLUS      shift, and go to state 4
    MINUS     shift, and go to state 5
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    FOR       shift, and go to state 8
    ENDER     shift, and go to state 128
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    loop     go to state 13
    stmt     go to state 129
    exp      go to state 15
    term     go to state 16
    sfactor  go to state 17
    var      go to state 18
    factor   go to state 19


state 126

    3 loop_stmts: stmt .

    $default  reduce using rule 3 (loop_stmts)


state 127

    8 loop: FOR VARIABLE EQ factor COLON factor COLON factor delim . loop_stmts ENDER

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NL        shift, and go to state 3
    PLUS      shift, and go to state 4
    MINUS     shift, and go to state 5
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    FOR       shift, and go to state 8
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    loop_stmts  go to state 130
    loop        go to state 13
    stmt        go to state 126
    exp         go to state 15
    term        go to state 16
    sfactor     go to state 17
    var         go to state 18
    factor      go to state 19


state 128

    7 loop: FOR VARIABLE EQ factor COLON factor delim loop_stmts ENDER .

    $default  reduce using rule 7 (loop)


state 129

    4 loop_stmts: loop_stmts stmt .

    $default  reduce using rule 4 (loop_stmts)


state 130

    4 loop_stmts: loop_stmts . stmt
    8 loop: FOR VARIABLE EQ factor COLON factor COLON factor delim loop_stmts . ENDER

    NUM       shift, and go to state 1
    VARIABLE  shift, and go to state 2
    NL        shift, and go to state 3
    PLUS      shift, and go to state 4
    MINUS     shift, and go to state 5
    LP        shift, and go to state 6
    LS        shift, and go to state 7
    FOR       shift, and go to state 8
    ENDER     shift, and go to state 131
    RAND      shift, and go to state 9
    ZEROS     shift, and go to state 10
    ONES      shift, and go to state 11

    loop     go to state 13
    stmt     go to state 129
    exp      go to state 15
    term     go to state 16
    sfactor  go to state 17
    var      go to state 18
    factor   go to state 19


state 131

    8 loop: FOR VARIABLE EQ factor COLON factor COLON factor delim loop_stmts ENDER .

    $default  reduce using rule 8 (loop)
