CPHVB_BASE=../../
CPHVB_INCLUDE=$(CPHVB_BASE)include/
INCLUDE=-I$(CPHVB_BASE)include -I/System/Library/Frameworks/OpenCL.framework
LIB=libcphvb_ve_gpu.dylib
CXX?=g++
CC?=gcc
WARNOPTS=-Wall
ARCHOPTS?=-arch i386 -arch x86_64
LCFLAGS= $(WARNOPTS) $(ARCHOPTS) -g -O0 -fPIC $(INCLUDE) $(CFLAGS)
CCFLAGS = $(LCFLAGS) -std=gnu99
CXXFLAGS = $(LCFLAGS) -D__CL_ENABLE_EXCEPTIONS

LDFLAGS = $(ARCHOPTS) -L../../core -L/System/Library/Frameworks/OpenCL.framework -framework OpenCL -lcphvb -shared -Wl,-dylib_install_name,$(LIB)
CSRC = OCLtype
CPPSRC = ResourceManager cphvb_ve_gpu InstructionBatch Buffer KernelParameter BaseArray Scalar \
		InstructionScheduler Kernel GenerateSourceCode UserFunctionRandom UserFunctionReduce StringHasher
 
OBJECTS=$(CPPSRC:=.oo) $(CSRC:=.o)
INSTALLDIR?=/opt/cphvb/
KERNELDIR=/usr/local/cphvb/

all: $(LIB)

%.o: %.c %.h
		$(CC) -c $< -o $@ $(CCFLAGS)

cphvb_ve_gpu.oo: cphvb_ve_gpu.cpp cphvb_ve_gpu.h
		$(CXX) -c $< -o $@ $(CXXFLAGS)

%.oo: %.cpp %.hpp Makefile
		$(CXX) -c $< -o $@ $(CXXFLAGS)

$(LIB): $(OBJECTS)
		$(CXX) $(OBJECTS) -o $@ $(LDFLAGS)

clean:
		rm -rf *.o  *.oo *~ *.gch *.orig *.so *.dylib

install: all
		cp $(LIB) $(INSTALLDIR)
