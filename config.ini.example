[bridge]
type = bridge
children = node

#
# Managers
#

[visualizer]
type = ve
children = node
impl = /opt/bohrium/.local/libbh_ve_visualizer.so

[proxy]
type = vem
port = 4200
impl = /opt/bohrium/libbh_proxy_server.so
children = node

[cluster]
type = vem
children = node
impl = /opt/bohrium/libbh_vem_cluster.so

[node]
type = vem
children = cpu
impl = /opt/bohrium/libbh_vem_node.so

#
# Engines
#
[gpu]
type = ve
ocldir = /opt/bohrium/gpu/ocl_source
include = /opt/bohrium/gpu/include
impl = /opt/bohrium/libbh_ve_gpu.so
children = cpu

[cpu]
type = ve
compiler_cmd="gcc -I/opt/bohrium/include -lm -O3 -march=native -fopenmp -fPIC -std=c99 -x c -shared - -o "
#compiler_cmd="/opt/bohrium/cpu/scripts/osx_compile.sh -I/opt/bohrium/include -o "
#compiler_cmd="gcc -lm -O2 -march=native -fopenmp -fPIC -std=c99 -x c -shared - -o "
#compiler_cmd="clang -lm -O3 -march=native -fPIC -std=c99 -x c -shared - -o "
#compiler_cmd="/opt/a64/bin/opencc -lm -O2 -fPIC -std=c99 -x c -shared - -o "
object_path=/opt/bohrium/cpu/objects
kernel_path=/opt/bohrium/cpu/kernels
template_path=/opt/bohrium/cpu/templates
impl = /opt/bohrium/libbh_ve_cpu.so
libs = /opt/bohrium/libbh_matmul.so,/opt/bohrium/libbh_visualizer.so,/opt/bohrium/libbh_fftw.so

#
# Filters
#
[transitive_reduction]
type = filter
impl = /opt/bohrium/libbh_filter_transitive_reduction.so
children = cpu

[pprint]
type = filter
impl = /opt/bohrium/libbh_filter_pprint.so
children = cpu

[validate]
type = filter
impl = /opt/bohrium/libbh_filter_validate.so
children = cpu

[range]
type = filter
impl = /opt/bohrium/libbh_filter_range.so
children = cpu

